{"remainingRequest":"/Users/liujia/Documents/academy-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liujia/Documents/academy-admin/src/views/academy/teacher/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liujia/Documents/academy-admin/src/views/academy/teacher/form.vue","mtime":1621425746002},{"path":"/Users/liujia/Documents/academy-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liujia/Documents/academy-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liujia/Documents/academy-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liujia/Documents/academy-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0ZWFjaGVyIGZyb20gJ0AvYXBpL2FjYWRlbXkvdGVhY2hlcicKaW1wb3J0IEltYWdlQ3JvcHBlciBmcm9tICdAL2NvbXBvbmVudHMvSW1hZ2VDcm9wcGVyJwppbXBvcnQgUGFuVGh1bWIgZnJvbSAnQC9jb21wb25lbnRzL1BhblRodW1iJwoKY29uc3QgZGVmYXVsdEZyb20gPSB7CiAgbmFtZTogJycsCiAgc29ydDogMCwKICBsZXZlbDogMSwKICBjYXJlZXI6ICcnLAogIGludHJvOiAnJywKICBhdmF0YXI6ICdodHRwczovL2dyYWluLW9ubGluZS1lZHVjYXRpb24ub3NzLWNuLXNoZW56aGVuLmFsaXl1bmNzLmNvbS9hdmF0YXIvYXZhdGFyLmpwZycKfQoKZXhwb3J0IGRlZmF1bHQgewogIC8vIOWjsOaYjuaPkuS7tgogIGNvbXBvbmVudHM6IHsgSW1hZ2VDcm9wcGVyLCBQYW5UaHVtYiB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ZWFjaGVyOiBkZWZhdWx0RnJvbSwKICAgICAgc2F2ZUJ0bkRpc2FibGVkOiBmYWxzZSwgLy8g5LiN5ZCv55SoZGlzYWJsZWTvvIwg5L+d5a2Y5oyJ6ZKu5Li65Lqu6ImyCiAgICAgIEJBU0VfQVBJOiBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfQVBJLCAvLyDmjqXlj6NBUEnlnLDlnYAKCiAgICAgIGltYWdlY3JvcHBlclNob3c6IGZhbHNlLCAvLyDmmK/lkKbmmL7npLrkuIrkvKDnu4Tku7YKICAgICAgaW1hZ2Vjcm9wcGVyS2V5OiAwIC8vIOS4iuS8oOe7hOS7tmlkCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlKHRvLCBmcm9tKSB7CiAgICAgIC8vIOW9k+ebkeWQrOeahOi3r+eUsei/meS4quaWueazleaJp+ihjOeahOaXtuWAme+8jAogICAgICAvLyDmiJHku6zmmK/kuI3mmK/liKTmlq3mraTot6/nlLHov4fmnaXnmoTlj4LmlbDmmK/lkKblrZjlnKjvvIwKICAgICAgLy8g5aaC5p6c5LiN5a2Y5Zyo77yM6YKj5bCx6K+05piO5piv5paw5aKeCiAgICAgIC8vIOWmguaenOWtmOWcqOmCo+S5iOivtOaYjuS/ruaUuei/h+adpeeahAogICAgICB0aGlzLmluaXQoKQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsgLy8g5Zyo5Yqg6L2955qE5pe25YCZ5omn6KGM5LqG6L+Z5Liq5pa55rOV77yM5Y+v5Lul6LCD55So6L+Z5Liq5qC55o2uSUTmnaXmj5Llj5nnmoTmlrnms5UKICAgIC8vIOaJp+ihjOatpOaWueazleOAgeiOt+WPluaIkeS7rOeahOWPguaVsAogICAgdGhpcy5pbml0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQoKSB7CiAgICAgIC8vIOWIpOaWrei3r+W+hOaYr+WQpuaciWlk5YC8CiAgICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMgJiYgdGhpcy4kcm91dGUucGFyYW1zLmlkKSB7IC8vIOW9k+WKoOi9vemhtemdoueahOaXtuWAmeWwseimgeiOt+WPluWPguaVsOeahOWAvOS6hgogICAgICAgIC8vIOagueaNrmlk5p+l6K+iCiAgICAgICAgdGhpcy5zZWxlY3RCeUlkKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRlYWNoZXIgPSB7IC4uLmRlZmF1bHRGcm9tIH0KICAgICAgfQogICAgfSwKICAgIC8vIDHjgIEg5oCO5LmI5Yik5pat5piv5ZCm5piv5paw5aKe6L+Y5piv5L+u5pS5CiAgICAvLyAy44CBIOagueaNrnRlYWNoZXIuaWTmnaXliKTmlq0KCiAgICBzYXZlT3JVcGRhdGUoKSB7CiAgICAgIC8vIOW9k+eCueWHu+aMiemSrueahOaXtuWAme+8jOiuqeS/neWtmOaMiemSruS4uua1heiJsu+8jCDkuI3lkK/nlKgKICAgICAgdGhpcy5zYXZlQnRuRGlzYWJsZWQgPSB0cnVlCgogICAgICBpZiAodGhpcy50ZWFjaGVyLmlkKSB7CiAgICAgICAgdGhpcy51cGRhdGVCeUlkKCkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNhdmUoKQogICAgICB9CiAgICB9LAogICAgc2F2ZSgpIHsKICAgICAgdGVhY2hlci5zYXZlKHRoaXMudGVhY2hlcikKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgbWVzc2FnZTogJ+S/neWtmOaIkOWKnyEnCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAnL3RlYWNoZXIvbGlzdCcgfSkKICAgICAgICB9KQogICAgICAgIC5jYXRjaChyZXNwb25zZSA9PiB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfkv53lrZjlpLHotKUhJwogICAgICAgICAgfSkKICAgICAgICB9KQogICAgfSwKICAgIHVwZGF0ZUJ5SWQoKSB7CiAgICAgIHRlYWNoZXIudXBkYXRlQnlJZCh0aGlzLnRlYWNoZXIpCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgLy8g5L+u5pS55o+Q56S6CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICBtZXNzYWdlOiAn5L+u5pS55oiQ5YqfJwogICAgICAgICAgfSkKICAgICAgICB9KQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogJy90ZWFjaGVyL2xpc3QnIH0pCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2gocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfkv67mlLnlpLHotKUnCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICB9LAogICAgc2VsZWN0QnlJZChpZCkgewogICAgICB0ZWFjaGVyLnNlbGVjdEJ5SWQoaWQpCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy50ZWFjaGVyID0gcmVzcG9uc2UuZGF0YS50ZWFjaGVyCiAgICAgICAgfSkuY2F0Y2gocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfojrflj5blpLHotKUnCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICB9LAogICAgLy8g5LiK5Lyg5oiQ5Yqf5ZCO55qE5Zue6LCD5Ye95pWwCiAgICBjcm9wU3VjY2VzcyhkYXRhKSB7CiAgICAgIHRoaXMuaW1hZ2Vjcm9wcGVyU2hvdyA9IGZhbHNlCiAgICAgIHRoaXMudGVhY2hlci5hdmF0YXIgPSBkYXRhLnVybAogICAgICAvLyDkuIrkvKDmiJDlip/lkI7vvIzph43mlrDmiZPlvIDkuIrkvKDnu4Tku7bml7bliJ3lp4vljJbnu4Tku7bvvIzlkKbliJnmmL7npLrkuIrkuIDmrKHnmoTkuIrkvKDnu5PmnpwKICAgICAgdGhpcy5pbWFnZWNyb3BwZXJLZXkgPSB0aGlzLmltYWdlY3JvcHBlcktleSArIDEKICAgIH0sCgogICAgLy8g5YWz6Zet5LiK5Lyg57uE5Lu2CiAgICBjbG9zZSgpIHsKICAgICAgLy8g5YWz6Zet5LqG5LiK5Lyg5Zu+54mH5qGGCiAgICAgIHRoaXMuaW1hZ2Vjcm9wcGVyU2hvdyA9IGZhbHNlCiAgICAgIC8vIOS4iuS8oOWksei0peWQju+8jOmHjeaWsOaJk+W8gOS4iuS8oOe7hOS7tuaXtuWIneWni+WMlue7hOS7tu+8jOWQpuWImeaYvuekuuS4iuS4gOasoeeahOS4iuS8oOe7k+aenAogICAgICB0aGlzLmltYWdlY3JvcHBlcktleSA9IHRoaXMuaW1hZ2Vjcm9wcGVyS2V5ICsgMQogICAgfQogIH0KfQo="},{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"form.vue","sourceRoot":"src/views/academy/teacher","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form label-width=\"120px\">\n      <el-form-item label=\"讲师名称\">\n        <el-input v-model=\"teacher.name\" />\n      </el-form-item>\n      <el-form-item label=\"讲师排序\">\n        <el-input-number v-model=\"teacher.sort\" controls-position=\"right\" min=\"0\" />\n      </el-form-item>\n      <el-form-item label=\"讲师头衔\">\n        <el-select v-model=\"teacher.level\" clearable placeholder=\"请选择\">\n          <!--\n            数据类型一定要和取出的json中的一致，否则没法回填\n            因此，这里value使用动态绑定的值，保证其数据类型是number\n          -->\n          <el-option :value=\"1\" label=\"高级讲师\" />\n          <el-option :value=\"2\" label=\"首席讲师\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"讲师资历\">\n        <el-input v-model=\"teacher.career\" />\n      </el-form-item>\n      <el-form-item label=\"讲师简介\">\n        <el-input v-model=\"teacher.intro\" :rows=\"10\" type=\"textarea\" />\n      </el-form-item>\n\n      <!-- 讲师头像 -->\n      <el-form-item label=\"讲师头像\">\n        <!-- 头衔缩略图 -->\n        <pan-thumb :image=\"teacher.avatar\" />\n        <!-- 文件上传按钮 -->\n        <el-button type=\"primary\" icon=\"el-icon-upload\" @click=\"imagecropperShow=true\">更换头像\n        </el-button>\n\n        <!--\n      v-show：是否显示上传组件\n      :key：类似于id，如果一个页面多个图片上传控件，可以做区分\n      :url：后台上传的url地址\n      @close：关闭上传组件\n      @crop-upload-success：上传成功后的回调 -->\n        <image-cropper\n          v-show=\"imagecropperShow\"\n          :key=\"imagecropperKey\"\n          :width=\"300\"\n          :height=\"300\"\n          :url=\"BASE_API+'oss/avatar/upload?module=avatar'\"\n          field=\"file\"\n          @close=\"close\"\n          @crop-upload-success=\"cropSuccess\"\n        />\n\n      </el-form-item>\n\n      <el-form-item>\n        <el-button :disabled=\"saveBtnDisabled\" type=\"primary\" @click=\"saveOrUpdate\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport teacher from '@/api/academy/teacher'\nimport ImageCropper from '@/components/ImageCropper'\nimport PanThumb from '@/components/PanThumb'\n\nconst defaultFrom = {\n  name: '',\n  sort: 0,\n  level: 1,\n  career: '',\n  intro: '',\n  avatar: 'https://grain-online-education.oss-cn-shenzhen.aliyuncs.com/avatar/avatar.jpg'\n}\n\nexport default {\n  // 声明插件\n  components: { ImageCropper, PanThumb },\n  data() {\n    return {\n      teacher: defaultFrom,\n      saveBtnDisabled: false, // 不启用disabled， 保存按钮为亮色\n      BASE_API: process.env.VUE_APP_BASE_API, // 接口API地址\n\n      imagecropperShow: false, // 是否显示上传组件\n      imagecropperKey: 0 // 上传组件id\n    }\n  },\n  watch: {\n    $route(to, from) {\n      // 当监听的路由这个方法执行的时候，\n      // 我们是不是判断此路由过来的参数是否存在，\n      // 如果不存在，那就说明是新增\n      // 如果存在那么说明修改过来的\n      this.init()\n    }\n  },\n  created() { // 在加载的时候执行了这个方法，可以调用这个根据ID来插叙的方法\n    // 执行此方法、获取我们的参数\n    this.init()\n  },\n  methods: {\n    init() {\n      // 判断路径是否有id值\n      if (this.$route.params && this.$route.params.id) { // 当加载页面的时候就要获取参数的值了\n        // 根据id查询\n        this.selectById(this.$route.params.id)\n      } else {\n        this.teacher = { ...defaultFrom }\n      }\n    },\n    // 1、 怎么判断是否是新增还是修改\n    // 2、 根据teacher.id来判断\n\n    saveOrUpdate() {\n      // 当点击按钮的时候，让保存按钮为浅色， 不启用\n      this.saveBtnDisabled = true\n\n      if (this.teacher.id) {\n        this.updateById()\n      } else {\n        this.save()\n      }\n    },\n    save() {\n      teacher.save(this.teacher)\n        .then(response => {\n          return this.$message({\n            type: 'success',\n            message: '保存成功!'\n          })\n        })\n        .then(response => {\n          this.$router.push({ path: '/teacher/list' })\n        })\n        .catch(response => {\n          return this.$message({\n            type: 'error',\n            message: '保存失败!'\n          })\n        })\n    },\n    updateById() {\n      teacher.updateById(this.teacher)\n        .then(response => {\n          // 修改提示\n          this.$message({\n            type: 'success',\n            message: '修改成功'\n          })\n        })\n        .then(response => {\n          this.$router.push({ path: '/teacher/list' })\n        })\n        .catch(response => {\n          this.$message({\n            type: 'error',\n            message: '修改失败'\n          })\n        })\n    },\n    selectById(id) {\n      teacher.selectById(id)\n        .then(response => {\n          this.teacher = response.data.teacher\n        }).catch(response => {\n          this.$message({\n            type: 'error',\n            message: '获取失败'\n          })\n        })\n    },\n    // 上传成功后的回调函数\n    cropSuccess(data) {\n      this.imagecropperShow = false\n      this.teacher.avatar = data.url\n      // 上传成功后，重新打开上传组件时初始化组件，否则显示上一次的上传结果\n      this.imagecropperKey = this.imagecropperKey + 1\n    },\n\n    // 关闭上传组件\n    close() {\n      // 关闭了上传图片框\n      this.imagecropperShow = false\n      // 上传失败后，重新打开上传组件时初始化组件，否则显示上一次的上传结果\n      this.imagecropperKey = this.imagecropperKey + 1\n    }\n  }\n}\n</script>\n"]}]}